class Solution {
public:
    bool isValid(string s) {
        stack<char>result;
        for(int i = 0;i < s.size();i++){
            //左括号直接压栈
            if((s[i]==')'||s[i]==']'||s[i]=='}') && result.empty()){
                return false;
            }
            //只有配对才进行弹栈
            if(s[i]=='(' || s[i]=='[' || s[i]=='{')
            {
                result.push(s[i]);
            }
            else if(s[i] == ')' && result.top()=='('){
                result.pop();
            }
            else if(s[i] == ']' && result.top()=='['){
                result.pop();
            }
            else if(s[i] == '}' && result.top()=='{'){
                result.pop();
            }
            //否则就直接返回false
            else if(s[i] == ')' && result.top()!='(' || s[i] == ']' && result.top()!='['||s[i] == '}' && result.top()!='{'){
                return false;
        }
    }
    return result.empty();
}
};